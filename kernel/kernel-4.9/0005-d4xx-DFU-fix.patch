From 65ffa037097a2af355f213fe0538a1b33e530b21 Mon Sep 17 00:00:00 2001
From: Alex Gantman <alexander.gantman@intel.com>
Date: Tue, 5 Nov 2019 15:53:05 +0200
Subject: [PATCH] d4xx: DFU fix

Signed-off-by: Alex Gantman <alexander.gantman@intel.com>
---
 drivers/media/i2c/d4xx/d4xx_dfu.c | 13 +++++++------
 drivers/media/i2c/d4xx/d4xx_rs.c  |  2 --
 drivers/media/i2c/d4xx/rs_d4xx.h  |  1 +
 3 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/drivers/media/i2c/d4xx/d4xx_dfu.c b/drivers/media/i2c/d4xx/d4xx_dfu.c
index 542aac9..0b13a01 100644
--- a/drivers/media/i2c/d4xx/d4xx_dfu.c
+++ b/drivers/media/i2c/d4xx/d4xx_dfu.c
@@ -252,7 +252,7 @@ static int d4xx_dfu_detach(struct d4xx_dfu_dev *dfu_dev)
 };
 
 /* When a process reads from our device, this gets called. */
-static ssize_t device_read(struct file *flip, char *buffer, size_t len, loff_t *offset)
+static ssize_t device_read(struct file *flip, char __user *buffer, size_t len, loff_t *offset)
 {
 	struct d4xx_dfu_dev *dfu_dev = flip->private_data;
 	u16 fw_ver;
@@ -277,7 +277,7 @@ static ssize_t device_read(struct file *flip, char *buffer, size_t len, loff_t *
 	return ret;
 };
 
-static ssize_t device_write(struct file *flip, const char *buffer, size_t len, loff_t *offset)
+static ssize_t device_write(struct file *flip, const char __user *buffer, size_t len, loff_t *offset)
 {
 	struct d4xx_dfu_dev *dfu_dev = flip->private_data;
 	const struct device *dev = dfu_dev->tc_dev->dev;
@@ -302,7 +302,6 @@ static ssize_t device_write(struct file *flip, const char *buffer, size_t len, l
 		}
 		dfu_dev->dfu_state_flag = D4XX_DFU_IN_PROGRESS;
 		dfu_dev->init_v4l_f = 1;
-
 		/*no break - procceed to download*/
 	case D4XX_DFU_IN_PROGRESS: {
 		unsigned int dfu_full_blocks = len / DFU_BLOCK_SIZE;
@@ -313,7 +312,7 @@ static ssize_t device_write(struct file *flip, const char *buffer, size_t len, l
 				ret = -EFAULT;
 				goto dfu_write_error;
 			}
-			ret = dfu_raw_write(dfu_dev, 0x4a00, buffer, DFU_BLOCK_SIZE);
+			ret = dfu_raw_write(dfu_dev, 0x4a00, dfu_dev->dfu_msg, DFU_BLOCK_SIZE);
 			if (ret < 0)
 				goto dfu_write_error;
 			ret = d4xx_dfu_wait_for_get_dfu_status (dfu_dev, dfuDNLOAD_IDLE);
@@ -326,7 +325,7 @@ static ssize_t device_write(struct file *flip, const char *buffer, size_t len, l
 				goto dfu_write_error;
 		}
 		if (dfu_part_blocks) {
-			ret = dfu_raw_write(dfu_dev, 0x4a00, buffer, dfu_part_blocks);
+			ret = dfu_raw_write(dfu_dev, 0x4a00, dfu_dev->dfu_msg, dfu_part_blocks);
 			if (!ret) {
 				ret = d4xx_dfu_wait_for_get_dfu_status (dfu_dev, dfuDNLOAD_IDLE);
 			}
@@ -360,8 +359,10 @@ static ssize_t device_write(struct file *flip, const char *buffer, size_t len, l
 static int device_open(struct inode *inode, struct file *file)
 {
 	struct d4xx_dfu_dev *dfu_dev = container_of(inode->i_cdev, struct d4xx_dfu_dev, d4xx_cdev);
+	const struct device *dev = dfu_dev->tc_dev->dev;
 	struct tegracam_device *tc_dev = dfu_dev->tc_dev;
 
+	dev_info(dev, "%s()\n", __func__);
 	try_module_get(THIS_MODULE);
 	if (dfu_dev->device_open_count)
 		return -EBUSY;
@@ -391,7 +392,7 @@ static int device_release(struct inode *inode, struct file *file)
 	return 0;
 };
 
-static const struct file_operations d4xx_device_file_ops = {
+const struct file_operations d4xx_device_file_ops = {
 	.owner  = THIS_MODULE,
 	.read = &device_read,
 	.write = &device_write,
diff --git a/drivers/media/i2c/d4xx/d4xx_rs.c b/drivers/media/i2c/d4xx/d4xx_rs.c
index 31ca21c..cc4c8140 100644
--- a/drivers/media/i2c/d4xx/d4xx_rs.c
+++ b/drivers/media/i2c/d4xx/d4xx_rs.c
@@ -112,8 +112,6 @@ struct d4xx_counters {
 	unsigned int n_ctrl;
 };
 
-static const struct file_operations d4xx_device_file_ops;
-
 static inline int d4xx_write(struct d4xx *state, u16 reg, u16 val)
 {
 	const struct device *dev = state->s_data->dev;
diff --git a/drivers/media/i2c/d4xx/rs_d4xx.h b/drivers/media/i2c/d4xx/rs_d4xx.h
index 9e42276..599cc65 100644
--- a/drivers/media/i2c/d4xx/rs_d4xx.h
+++ b/drivers/media/i2c/d4xx/rs_d4xx.h
@@ -83,5 +83,6 @@ struct hwm_cmd {
 };
 
 int d4xx_v4l_init(struct tegracam_device *tc_dev);
+extern const struct file_operations d4xx_device_file_ops;
 
 #endif /* __RS_D4XX__ */
-- 
2.7.4

